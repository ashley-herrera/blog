(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{499:function(e,t,a){"use strict";a.r(t);var o=a(2),i=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"tuesday"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tuesday"}},[e._v("#")]),e._v(" Tuesday")]),e._v(" "),a("p",[e._v("What are the three types of relationships?")]),e._v(" "),a("blockquote",[a("p",[e._v("The three types of relationships are one to one, one to many, and many to many. One to one is a relationship between two entities. One to many is where one side can have more than one relationship while the reverse relationship can only have one. Many to many is a relationship between two entities where they both might have many relationships between each other.")])]),e._v(" "),a("p",[e._v("What are the benefits of the traditional linking of relationships instead of Embedding")]),e._v(" "),a("blockquote",[a("p",[e._v("Traditional linking allows for easier access to the object. When embedded, the object can get lost and it's difficult to grab it's information.")])]),e._v(" "),a("p",[e._v("What are some of the challenges faced when deciding how to manage a many-to-many relationship that ultimately drive your decision on how to create it?")]),e._v(" "),a("blockquote",[a("p",[e._v("A many to many relationship requires a lot of controllers and services. It's difficult to keep track of the relationships. I will typically start with the first item and map it to its corresponding relationships on paper. After that I move on to the second item and do the same thing.")])]),e._v(" "),a("h2",{attrs:{id:"gregslist-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gregslist-api"}},[e._v("#")]),e._v(" Gregslist API")]),e._v(" "),a("p",[e._v("https://github.com/ashley-herrera/gregslistnode")])])}),[],!1,null,null,null);t.default=i.exports}}]);