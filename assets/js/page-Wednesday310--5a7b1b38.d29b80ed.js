(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{505:function(e,o,t){"use strict";t.r(o);var r=t(2),s=Object(r.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"wednesday-3-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wednesday-3-10"}},[e._v("#")]),e._v(" Wednesday 3/10")]),e._v(" "),t("p",[e._v("What are lifecycle hooks? What are lifecycle hooks used for?")]),e._v(" "),t("blockquote",[t("p",[e._v("Lifecycle hooks are a window into how the library you're using works behind-the-scenes. Lifecycle hooks allow you to know when your component is created, added to the DOM, updated, or destroyed.")])]),e._v(" "),t("p",[e._v("How have you utilized lifecycle hooks in your afternoon projects?")]),e._v(" "),t("blockquote",[t("p",[e._v("By using console.log and return. The information is presented in the console letting you know that the information is passing through properly.")])]),e._v(" "),t("p",[e._v("What are mounting hooks? When might you use them?")]),e._v(" "),t("blockquote",[t("p",[e._v("Mounting hooks allow you to access your component immediately before and after the first render. They will not run on the server-side render. Typically they are used to access or modify the DOM immediately before or after the initial render.")])]),e._v(" "),t("h2",{attrs:{id:"gregslist-2-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gregslist-2-0"}},[e._v("#")]),e._v(" Gregslist 2.0")]),e._v(" "),t("p",[e._v("https://github.com/ashley-herrera/gregslist2-electirc-boogaloo")])])}),[],!1,null,null,null);o.default=s.exports}}]);